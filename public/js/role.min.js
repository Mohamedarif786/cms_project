function uncheck(e){$(`#roleList #${e}`).click((function(){$(this).checked||$("#checkAll").attr("checked",!1)}))}function roleList(e,t,l){$("#roleList").empty(),$("#loader").show(),$.post("/rolesList",{name:e,description:t,status:""===l?void 0:l},(function(e){if(e.length)$("#roleList").empty(),$.get("/templates/role_item.html",(function(t){$.each(e,(function(e,l){$.tmpl(t,l).appendTo("#roleList")})),$("#loader").hide()}));else{$("#norecords").html('<td colspan="4" align="center">No Records found</td>'),$("#loader").hide()}}))}async function bulkDelete(){$("#loader").show();let e=$.find("#roleList tr input[name='cbRow']"),t=[];if($(e).each((function(){if(this.checked){let e=parseInt($(this).data("id"));t.push(e)}})),t.length){let e=await Promise.all(t.map((async e=>{const t=await fetch("/removeRole",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({roleid:e})});let l=await t.json();if(l.data&&l.data.removerole)return e})));t.length-e.length==0?(notify("Roles deleted successfully","success"),roleList()):notify("Unable to delete role(s)","error"),$("#loader").hide()}$("#deleteDialog").modal("hide")}async function bulkActive(){$("#loader").show();let e=$.find("#roleList tr input[name='cbRow']"),t=[];if($(e).each((function(){if(this.checked){let e=parseInt($(this).data("id"));t.push(e)}})),t.length){let e=await Promise.all(t.map((async e=>{const t=await fetch("/activeRole",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:e})});let l=await t.json();if(l.data&&l.data.activeRole)return e})));t.length-e.length==0?(notify("Roles activated successfully","success"),roleList()):notify("Unable to activate role(s)","error"),$("#loader").hide()}$("#activeDialog").modal("hide")}async function bulkInactive(){$("#loader").show();let e=$.find("#roleList tr input[name='cbRow']"),t=[];if($(e).each((function(){if(this.checked){let e=parseInt($(this).data("id"));t.push(e)}})),t.length){let e=await Promise.all(t.map((async e=>{const t=await fetch("/inactiveRole",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:e})});let l=await t.json();if(l.data&&l.data.inactiveRole)return e})));t.length-e.length==0?(notify("Roles deactivated successfully","success"),roleList()):notify("Unable to deactivate role(s)","error"),$("#loader").hide()}$("#inactiveDialog").modal("hide")}function singleDelete(e){$("#loader").show(),$.post("/removeRole",{roleid:e},(function(e){$("#loader").hide(),e.data&&e.data.removerole?notify(e.data.removerole.message,"success"):notify(e.errors[0].message,"error"),roleList()})),$("#loader").hide(),$("#deleteDialog").modal("hide")}function updateRow(e,t,l){$("#roleModal .modal-title").html("Update Role"),$("#roleModal #roleId").val(e),$("#roleModal #name").val(t),$("#roleModal #description").val(l),$("#roleModal").modal("show")}function deleteRow(e,t){$("#list").empty(),$("#list").append(`<li data-id="${e}">${t}</li>`),$("#deleteDialog .modal-title").html("Delete Role"),$("#deleteDialog #bdelete").off("click"),$("#deleteDialog #bdelete").click((()=>{singleDelete(e)})),$("#deleteDialog").modal("show")}$(document).ready((function(){roleList(),$("#roleModal").on("shown.bs.modal",(function(){$("#name").focus()})),$("#AddNewRole").click((function(){$("#roleModal #roleId").val(""),$("#roleModal #name").val(""),$("#roleModal #description").val(""),$("#roleModal").modal("show")})),$("#ActiveRole").click((function(){let e=$.find("#roleList tr input[name='cbRow']");$("#activeDialog #list").empty();let t=0;$(e).each((function(){this.checked&&(t++,$("#activeDialog #list").append(`<li data-id="${$(this).data("id")}">${$(this).data("name")}</li>`))})),t>0?($("#activeDialog .modal-title").html("Active Roles"),$("#activeDialog #bactive").off("click"),$("#activeDialog #bactive").click((()=>{bulkActive()})),$("#activeDialog").modal("show")):notify("Role(s) not selected","warning")})),$("#InactiveRole").click((function(){let e=$.find("#roleList tr input[name='cbRow']");$("#inactiveDialog #list").empty();let t=0;$(e).each((function(){this.checked&&(t++,$("#inactiveDialog #list").append(`<li data-id="${$(this).data("id")}">${$(this).data("name")}</li>`))})),t>0?($("#inactiveDialog .modal-title").html("Inactive Roles"),$("#inactiveDialog #binactive").off("click"),$("#inactiveDialog #binactive").click((()=>{bulkInactive()})),$("#inactiveDialog").modal("show")):notify("Role(s) not selected","warning")})),$("#Save").click((function(){let e=$("#newForm")[0].checkValidity();if(e){$("#loader").show();let e={name:$("#name").val().toUpperCase(),description:$("#description").val(),status:"ACTIVE"};""!==$("#roleId").val()?(e.id=$("#roleId").val(),$.post("/updateRole",e,(function(e){e.data?e.data.updateRole.success?notify(e.data.updateRole.message,"success"):notify(e.data.updateRole.message,"error"):notify(e.errors[0].message,"error"),$("#loader").hide(),$("#roleModal").modal("hide"),roleList()}))):$.post("/addrole",e,(function(e){e.data?e.data.addRole.success?notify(e.data.addRole.message,"success"):notify(e.data.addRole.message,"error"):notify(e.errors[0].message,"error"),$("#loader").hide(),$("#roleModal").modal("hide"),roleList()}))}return $("#newForm")[0].classList.add("was-validated"),e})),$(".closeAll").click((function(){$("#name").val(""),$("#newRoleForm")[0].classList.remove("was-validated")})),$("#deleteAll").click((()=>{let e=$.find("#roleList tr input[name='cbRow']");$("#list").empty();let t=0;$(e).each((function(){this.checked&&(t++,$("#list").append(`<li data-id="${$(this).data("id")}">${$(this).data("name")}</li>`))})),t>0?($("#deleteDialog .modal-title").html("Delete Roles"),$("#deleteDialog #bdelete").off("click"),$("#deleteDialog #bdelete").click((()=>{bulkDelete()})),$("#deleteDialog").modal("show")):notify("Role(s) not selected","warning")})),$("#tablerecords #ByName").change((function(){roleList($(this).val())})),$("#tablerecords #ByDescription").change((function(){roleList(void 0,$(this).val())})),$("#tablerecords #ByStatus").change((function(){roleList(void 0,void 0,$(this).val())}))})),$("#checkAll").click((function(){$("input:checkbox").not("#flexSwitchCheckDefault").prop("checked",this.checked)}));